import os
import sys

# Add our parent folder to our path
sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))

import msgpack
import argparse
from curvature.geomath import Units
from curvature.output import OutputTools
from hashlib import sha1

parser = argparse.ArgumentParser(description='Output a tab-delimited file listing segments.')
parser.add_argument('--units', type=str, default='mi', choices=['mi', 'km'], help='Distance units in the output, km or mi Default: mi')
parser.add_argument('--pad-columns', action='store_true', help='Pad columns to fixed width for readability.')
args = parser.parse_args()

units = Units(args.units)
tools = OutputTools('km')

if args.pad_columns:
    head = "{curvature:9s}\t{length:11s}\t{name:40s}\t{highway:20s}\t{surface:20s}\t{id:s}\n"
    line = "{curvature:9d}\t{length:11.2f}\t{name:40s}\t{highway:20s}\t{surface:20s}\t{id:s}\n"
else:
    head = "{curvature:s}\t{length:s}\t{name:s}\t{highway:s}\t{surface:s}\t{id:s}\n"
    line = "{curvature:d}\t{length:.2f}\t{name:s}\t{highway:s}\t{surface:s}\t{id:s}\n"
length_head = "Length (%s)" % (args.units)
sys.stdout.write(head.format(curvature="Curvature", length=length_head, name="Name", highway="Highway", surface="Surface", id="Id"))

unpacker = msgpack.Unpacker(sys.stdin.buffer, use_list=True, encoding='utf-8')
for collection in unpacker:
    name = tools.get_collection_name(collection)
    name = tools.get_collection_name(collection)
    curvature = int(tools.get_collection_curvature(collection))
    length = int(tools.get_collection_length(collection))
    surface = ', '.join(tools.get_length_weighted_collection_tags(collection, 'surface'))
    highway = ', '.join(tools.get_length_weighted_collection_tags(collection, 'highway'))

    way_ids = []
    for way in collection['ways']:
        # The id will include by the way id and the starting ref as a single OSM
        # way might be split into multiple collections.
        way_ids.append("{}-{}".format(way['id'], way['refs'][0]))
    hash = sha1()
    id_bytestring = ':'.join(map(str, way_ids)).encode('ascii')
    hash.update(id_bytestring)
    id = hash.hexdigest()

    sys.stdout.write(line.format(curvature=curvature, length=units.convert(length), name=name, highway=highway, surface=surface, id=id))

sys.stdout.write("\n")